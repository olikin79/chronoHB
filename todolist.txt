Bugs restants ou fonctionnalités manquantes actuelles : ChronoHB.py :
- différencier les courses (regroupements de catégories) et les catégories. Ce sont les courses qu'il faut lancer et non les catégories.
- l'affichage.html pourrait être exporté à chaque actualisation vers un serveur ftp sur le web (identifiants+mdp+adresse à renseigner dans les paramètres).
Ainsi, n'importe quel autre ordintateur relié à internet, plus lointain, pourrait afficher les résultats.
- l'affichage.html pourrait afficher le chrono de(s) la course(s) en cours lorsqu'aucun coureur n'est arrivé.
- faire en sorte que les erreurs soient affichées (pas dur) mais pas bloquantes. 
	Qu'elles disparaissent de l'affichage quand elles ont été solutionnées... 
	(difficile : nomenclature des erreurs à écrire / tests de bonne résolution à écrire)
	Un bouton pourrait apparaître à côté : tester la bonne résolution et avertir que ce n'est pas le cas : 
	proposer d'ignorer ou de conserver l'erreur à l'affichage. => le timer ne serait plus jamais en pause.
- permettre l'export et l'import d'une base de données
- sur l'interface GUI : 
	afficher les chronos des courses en cours (avec le temps qui défile).
	permettre une modification manuelle de l'heure de départ : fonction fixerDepart utilisable avec des sécurités à ajouter.
- dans la sauvegarde, ajouter les deux fichiers donneesSmartphones et donneesLocales.txt 
	(et Coureurs ? Normalement inutile car devrait être regénéré à la volée au démarrage du logiciel : ce serait mieux)
- vérifier que la sauvegarde vers la clé USB permet une restauration complète en cas de changement d'ordinateur en cours de course.
- permettre une édition des caractéristiques d'un coureur (sauf nom-prénom fixes) quand il est en erreur (ou en préparation de course dans le menu): 
	"Voulez-vous corriger les caractéristiques du coureur en erreur ?" amènerait sur sa fiche et permettrait de modifier son sexe, sa classe, sa catégorie.
	Mémoriser dans class Coureur la catégorie en dur : méthode pour Autoriser un changement de catégorie qui serait mémorisé, sauf réimport SIECLE qui écrase tout.
- faire en sorte que l'on puisse affecter un dossard à un temps (que cela fonctionne toujours) et que l'Entry apparaisse au bon endroit. 
	Faire des tests avec une très grande série de données pour recalculer la fonction affine qui va bien (trop arrondi actuellement).
- documenter la mise en plein écran sur l'affichage secondaire (raccourcis claviers)
- vérifier que le fichier coureurs.txt est bien regénéré lors de l'ajout manuel d'un coureur.
- vitesse de défilement réglable par une entryParam sur l'application = > Prévoir un intervalle de validité.
	 Actuellement, les données saisies ne sont pas vérifiées, ce qui peut planter la page web (pas dramatique)
	une vérificaiton optionnelle isnumeric dans la classe "EntryParam" avec un intervalle de validité sera suffisant 
- photo finish à l'arrivée automatiques et accessible depuis l'interface GUI
- si ajout multiple + affectation => dossard affecté au dernier et non au premier.
- dans l'interface, quand on ajoute un dossard derrière un autre et que la sélection dans l'interface ne contient pas de dossard (seul un temps),
   alors le script plante : à blinder !
- quand une erreur s'affiche "un dossard déjà ajouté par un autre smartphone", etc... La boite de dialogue peut apparaître plusieurs fois.
  le bug est dans l'action du timer...
- si la génération des dossards (ou des résultats ou du xlxs) échouent, c'est probablement lié à un fichier ouvert dans adobe reader ou excel. 
	Inviter l'utilisateur à fermer ces logiciels par un pop-up.
- possibilité de compiler les dossards de chaque course séparément: utile finalement après massicot de ce jour ! 
- quand on supprime le seul et unique temps avec le smartphone, il ne disparaît pas de l'interface GUI.
Tant pis si on perd une demi-page une fois sur deux.

- trier les coureurs du listing par ordre alphabétique (et non par création=> dossard, comme actuellement)
- dans les paramètres, permettre de changer l'option : "statistiques en % ou en effectifs".


Bugs à corriger sur chronoHB.py:
1. gérer le bug où un coureur passerait la ligne avec son dossard, avant d'être parti. 
Pour l'instant, c'est plutôt mal géré mais on peut forcer le blocage (voir la documentation).
L'idéal serait :
	a) de ne pas ajouter la ligne add dossard dans le fichier txt des données du téléphone.
	b) d'avoir un retour de l'erreur côté smartphone => supprimer le dossard de la liste d'arrivée sur le téléphone pour données cohérentes
QUID si on annule un départ. On peut alors se retrouver dans ce cas là également. 
Il faut donc signaler, alerter mais permettre depuis l'interface d'ignorer ce type d'erreur.

2. (FAIT par "Patch rapide à corriger plus tard" dans FonctionsMetiers.py dans delArriveeTemps(...), 
aux environs de la ligne 1836 dans chronoHB1.1 mais peut-être perdu lors des mic-mac 2021 : chronoHB 1.2 issu de chronoHB1 et non 1.1 trop buggué) 
gérer le cas où le seul et unique temps du tableau GUI est effacé. Le tableau ne se vide pas et après la complétion par d'autres temps est incorrecte.

3. Tester si ce bug persiste : impossible de supprimer un temps dans l'interface GUI qui ne serait pas de la date du jour. 
Il est sûrement encore présent puisque tableauGUI ne contient pas l'information. 
Il faudra ajouter le temps précis en bout de tableauGUI pour que l'interface puisse connaître le temps GMT depuis epoch exact à supprimer.

Fonctionnalités manquantes :   
0. Ajouter un mode sombre via l'interface (case à cocher) pour utiliser la css mode-sombre. 

0. départager le challenge avec une règle claire (actuellement, les ex-aequos ne sont pas gérés) : la règle en UNSS est de prendre les positions 
(comparer la position du meilleur (fille ou garçon) de chaque classe, puis le second, etc... tant qu'il y a ex-aequo.

1. la possibilité d'éditer des listes d'élèves a posteriori (modifier un nom ou un prénom). 
Pour l'instant, il faudrait refaire un import siecle pour modifier un de ces deux éléments. 
Je précise que cela ne concerne pas la saisie des absents et dispensés, qui est prévue et rapide dans le logiciel.
    
2. Réimporter une sauvegarde directement dans l'interface. Quid de la sauvegarde et du réimport des donneesSmartphones.txt (cohérence finale?):
le smartphone pourrait mémoriser les diverses sauvegardes successives avec un numéro de course (requête HTTP sur le serveur) : 
- porpose une liste vide si nouvelle course.
- réimporte les saisies initiales si ancienne course
Tout en automatique 
L'accès à l'écran de saisie serait conditionné au fait que le serveur serait joignable. Sinon, un message indiquerait que l'on continue avec la base actuelle. Pas bloquant.

6. segmenter le code pour séparer les classes de données (AVANT DE DIFFUSER REELLEMENT LE LOGICIEL)

7. anonymer la documentation en faisant un import SIECLE avec des noms bidons et de nouvelles captures d'écrans.

8. Créer un système évitant des incohérences entre les smartphones et la base locale : 
un numéro de course unique qui empêcherait toute communication tant que les données n'ont pas été coordonnées ou celles du smartphone effacées.
A réfléchir...
