BUGS RESTANTS dans chronoHB :
PRIORITAIRES :
1. les menus de droite "topdepart", chronos des departs, affichageTV et erreurs peuvent s'afficher dans un ordre fluctuant.
Il faudrait tout regrouper dans une seule fonction qui les affiche ordonnés...

2. l'uid unique n'est pas correctement envoyé par le smartphone ou mal traité par Arrivee.pyw (à creuser). Ce développement n'est pas fonctionnel en l'état.
Cela pourrait être problématique pour des temps envoyés dupliqués alors que pour les dossards, c'est géré en aval désormais.

3. quand un dossard a passé la ligne alors que la course n'a pas été lancée. Il devrait apparaître dans l'interface et occuper une ligne.


NON PRIORITAIRES :
- dans l'application android : si ajout multiple + affectation sur smartphone => dossard affecté au dernier et non au premier.
Très peu probable en condition réelle car, avec un groupe, on ne peut anticiper qui sera le premier du groupe.
Il est donc impossible de pré-saisir le numéro du dossard.

	
ESTHETIQUE :
- faire en sorte que les numéros de la première colonne du tableauGUI soient systématiquement avec le bon nombre de chiffres
(interne à la class tableauGUI) si moins de 100 résultats : à deux chiffres. Si moins de mille résultats, à trois chiffres, etc...
Ainsi, quand on effectue un tri par colonne, actuellement, on ne peut plus retrouver l'affichage initial par ordre d'arrivée. C'est gênant.


A TESTER :
- vérifier que les ficheirs donneessamrtphones et donneeslocales.txt sont bien supprimés quand on réinitialise toutes les données. J'ai un doute.

- vérifier que générer tous les dossards les considère tous imprimés. 
Seuls ceux créés manuellement doivent être imprimés avec "imprimer les dossards non encore imprimés"

- est ce qu'un temps dupliqué dans DonneesSmartphone.txt provoque un doublon dans la base ou est ignoré par les fonctions métiers ? 
Il n'est pas ignoré mais ajoute une centième de seconde en plus, la finalisation du développement de l'UID unique reste prioritaire.


FONCTIONNALITES MANQUANTES dans chronoHB.py :
PRIORITAIRES :
- possibilité de compiler les dossards de chaque catégorie séparément: utile finalement après massicot de ce jour ! 
Tant pis si on perd une demi-page une fois sur deux.


	
MOYENNEMENT PRIORITAIRE :
- le défilement automatique de MonTableau ne s'effectue que par blocs de 2 lignes.
- trouver les différentes fonctions d'actualsation de l'interface GUI. Il semble y avoir 3 qui font sûrement doublon. A réfléchir.
Source d'incompréhension en cas de bizarreries d'affichage potentielles. Pas de bug constaté pour l'instant.
- permettre l'export de données via un menu (idem à la récupération).
- prévoir une procédure en cas de plantage au démarrage lié à une base de données incorrecte.
try : except : dans le traitement des données afin d'éviter une interface plantée comme ci-après :
Traceback (most recent call last):
  File "C:\Users\olikin\Documents\GitHub\chronoHB\chronoHB.py", line 1866, in <module>
    timer=Clock(root, "tableau.maj")
  File "C:\Users\olikin\Documents\GitHub\chronoHB\chronoHB.py", line 1765, in __init__
    self.update_clock()
  File "C:\Users\olikin\Documents\GitHub\chronoHB\chronoHB.py", line 1776, in update_clock
    traitementLocal = traiterDonneesLocales()
  File "C:\Users\olikin\Documents\GitHub\chronoHB\FonctionsMetiers.py", line 1162, in traiterDonneesLocales
    codeErreur = decodeActionsRecupSmartphone(ligne, local=True)
  File "C:\Users\olikin\Documents\GitHub\chronoHB\FonctionsMetiers.py", line 1231, in decodeActionsRecupSmartphone
    retour = addArriveeDossard(dossard, dossardPrecedent)
  File "C:\Users\olikin\Documents\GitHub\chronoHB\FonctionsMetiers.py", line 2747, in addArriveeDossard
    coureur = Coureurs[doss-1]
IndexError: list index out of range

Devrait lancer recupererSauvegardeGUI() en cas de plantage afin de charger une base correcte.


A PLUS LONG TERME :
- dans ajout manuel de coureur, le sexe devrait être une liste déroulante avec G ou F
  et la classe devrait aussi être une liste avec les classes précédentes mais permettant de saisir une nouvelle classe.
- pouvoir choisir l'imprimante vers laquelle on imprime dans les paramètres.
- quand MonTableau contient plus de 10 colonnes, impossible d'éditer une cellule au delà de la 10ème : problème de base 16 à convertir en base 10 (ou l'inverse, car écrit de mémoire...)
(Inutile en l'état actuel des besoins)
- Quid d'un réimport SIECLE sur une catégorie d'un coureur : doit il modifier les éléments modifiés manuellement (nom, prénom, sexe, naissance, classe) ?
  Actuellement, cela semble bien car sexe, naissance, classe, absent, dispensé, commentaire sont modifiés. 
  Seuls nom et prénom, s'ils sont différents, imposent la création d'un autre coureur (nouveau numéro de dossard). Du coup, l'autre dossard devient inutile.
- l'affichage.html pourrait être exporté à chaque actualisation vers un serveur ftp sur le web (identifiants+mdp+adresse à renseigner dans les paramètres).
Ainsi, n'importe quel autre ordintateur relié à internet, plus lointain, pourrait afficher les résultats.
Actuellement, il faut que le deuxième ordinateur soit sur le même réseau wifi pour afficher la page http://ip-serveur-chronoHB/Affichage.html .
- photo finish à l'arrivée automatique et accessible depuis l'interface GUI
- si la génération des dossards (ou des résultats ou du xlxs) échouent, c'est probablement lié à un fichier ouvert dans adobe reader ou excel. 
	Inviter l'utilisateur à fermer ces logiciels par un pop-up.
- possibilité de configurer les dossards générés : possibilité de trier les coureurs du listing par ordre alphabétique (et non par création=> dossard, comme actuellement)
d'imprimer les dossards par groupements, catégories, classes avec des cases à cocher dans un menu dédié...
- dans les paramètres, permettre de changer l'option : "statistiques en % ou en effectifs".
- import depuis un fichier xlsx à implémenter en plus du CSV (priorité faible)
- Ajouter un mode sombre via l'interface (case à cocher) pour utiliser la css mode-sombre. 
- segmenter le code pour séparer les classes de données (AVANT DE DIFFUSER REELLEMENT LE LOGICIEL)
- Créer un système évitant des incohérences entre les smartphones et la base locale : 
un numéro de course unique qui empêcherait toute communication tant que les données n'ont pas été coordonnées ou celles du smartphone effacées.
A réfléchir...
