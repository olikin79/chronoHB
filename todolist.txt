BUGS RESTANTS dans chronoHB :
PRIORITAIRES :
1. quand une erreur s'affiche "un dossard déjà ajouté par un autre smartphone", etc... La boite de dialogue peut apparaître plusieurs fois.
  le bug est dans l'action du timer... Ce bug devrait disparaitre avec la nouvelle gestion des erreurs non bloquantes, prévue en développement.
  
2. gérer le bug où un coureur passerait la ligne avec son dossard, avant d'être parti. 
Pour l'instant, c'est plutôt mal géré mais on peut forcer le blocage (voir la documentation).
L'idéal serait :
	a) de ne pas ajouter la ligne add dossard dans le fichier txt des données du téléphone.
	b) d'avoir un retour de l'erreur côté smartphone => supprimer le dossard de la liste d'arrivée sur le téléphone pour données cohérentes
QUID si on annule un départ. On peut alors se retrouver dans ce cas là également. 
Il faut donc signaler, alerter mais permettre depuis l'interface d'ignorer ce type d'erreur.

3. Tester si ce bug persiste : impossible de supprimer un temps dans l'interface GUI qui ne serait pas de la date du jour. 
Il est sûrement encore présent puisque tableauGUI ne contient pas l'information. 
Il faudra ajouter le temps précis en bout de tableauGUI pour que l'interface puisse connaître le temps GMT depuis epoch exact à supprimer.

4. le rang ne s'ajoute plus dans le tableau affiché au fur et à mesure des remontées du smartphone, sauf en cas de redémarrage de l'application serveur.



NON PRIORITAIRES :
- si ajout multiple + affectation sur smartphone => dossard affecté au dernier et non au premier.
Très peu probable en condition réelle car, avec un groupe, on ne peut anticiper qui sera le premier du groupe.

- dans l'interface, quand on ajoute un dossard derrière un autre et que la sélection dans l'interface ne contient pas de dossard (seul un temps),
   alors le script plante : à blinder !



A TESTER :
- vérifier que la sauvegarde vers la clé USB permet une restauration complète en cas de changement d'ordinateur en cours de course.

- vérifier si un ascenceur existe dans la combobox de modification d'un coureur quand il y en a beaucoup.
Dans le cas contraire, un champ Entry sera peut-être nécessaire.


FONCTIONNALITES MANQUANTES dans chronoHB.py :
PRIORITAIRES :
- faire en sorte que les erreurs soient affichées (pas dur) mais pas bloquantes. 
	Qu'elles disparaissent de l'affichage quand elles ont été solutionnées... 
	(difficile : nomenclature des erreurs à écrire / tests de bonne résolution à écrire)
	Un bouton pourrait apparaître à côté : tester la bonne résolution et avertir que ce n'est pas le cas : 
	proposer d'ignorer ou de conserver l'erreur à l'affichage. => le timer ne serait plus jamais en pause.

- permettre l'export et l'import d'une base de données. Quid de la sauvegarde et du réimport des donneesSmartphones.txt (cohérence finale?):
le smartphone pourrait mémoriser les diverses sauvegardes successives avec un numéro de course (requête HTTP sur le serveur) : 
	* propose une liste vide si nouvelle course.
	* réimporte les saisies initiales si ancienne course
	Tout en automatique 
	L'accès à l'écran de saisie serait conditionné au fait que le serveur serait joignable. Utile ? car bloquant en cas de panne temporaire du serveur.
	Sinon, un message indiquerait que l'on continue avec la base actuelle. Pas bloquant.
- dans la sauvegarde, ajouter les deux fichiers donneesSmartphones et donneesLocales.txt 
	(et Coureurs ? Normalement inutile car devrait être regénéré à la volée au démarrage du logiciel : ce serait mieux)
	

MOYENNEMENT PRIORITAIRE :
- Faire en sorte que l'on puisse affecter un dossard à un temps (que cela fonctionne toujours) et que l'Entry apparaisse au bon endroit. 
Faire des tests avec une très grande série de données comme celle du cross pour recalculer la fonction affine qui va bien (trop arrondi actuellement).
- mettre à jour la documentation avec les nouveautés de 2021-2022 + documenter la mise en plein écran sur l'affichage secondaire (raccourcis claviers).
- empêcher de changer la dénomination des groupements quand la course est lancée. L'interface d'affichage du chrono des courses plante car basée sur le nom modifié initial.
- possibilité de compiler les dossards de chaque course séparément: utile finalement après massicot de ce jour ! 
Tant pis si on perd une demi-page une fois sur deux.


A PLUS LONG TERME :
- permettre la modification de la catégorie d'un coureur manuellement. Est ce vraiment utile ?
Actuellement, les catégories sont automatiquement générées à partir de la date de naissance ou de la classe (suivant la configuration).
On peut déjà changer la date de naissance ou la classe d'appartenance (quitte à en inventer une) pour changer indirectement la catégorie d'un coureur.
La class Coureur contient déjà les méthodes pour définir une catégorie manuellement. Méthodes non utilisées dans l'interface GUI actuellement.
Quid d'un réimport SIECLE : doit il écraser la catégorie fixée manuellement ? Oui ?
- l'affichage.html pourrait être exporté à chaque actualisation vers un serveur ftp sur le web (identifiants+mdp+adresse à renseigner dans les paramètres).
Ainsi, n'importe quel autre ordintateur relié à internet, plus lointain, pourrait afficher les résultats.
Actuellement, il faut que le deuxième ordinateur soit sur le même réseau wifi pour afficher la page http://ip-serveur-chronoHB/Affichage.html .
- vitesse de défilement réglable par une entryParam sur l'application = > Prévoir un intervalle de validité.
	 Actuellement, les données saisies ne sont pas vérifiées, ce qui peut planter la page web (pas dramatique)
	une vérificaiton optionnelle isnumeric dans la classe "EntryParam" avec un intervalle de validité sera suffisant 
- photo finish à l'arrivée automatiques et accessible depuis l'interface GUI
- si la génération des dossards (ou des résultats ou du xlxs) échouent, c'est probablement lié à un fichier ouvert dans adobe reader ou excel. 
	Inviter l'utilisateur à fermer ces logiciels par un pop-up.
- possibilité de configurer les dossards générés : possibilité de trier les coureurs du listing par ordre alphabétique (et non par création=> dossard, comme actuellement)
d'imprimer les dossards par groupements, catégories, classes avec des cases à cocher dans un menu dédié...
- dans les paramètres, permettre de changer l'option : "statistiques en % ou en effectifs".
- import depuis un fichier xlsx à implémenter en plus du CSV (priorité faible)
- Ajouter un mode sombre via l'interface (case à cocher) pour utiliser la css mode-sombre. 
- départager le challenge avec une règle claire (actuellement, les ex-aequos ne sont pas gérés) : la règle en UNSS est de prendre les positions 
(comparer la position du meilleur (fille ou garçon) de chaque classe, puis le second, etc... tant qu'il y a ex-aequo. 
Cela devra se faire dans la fonction triParScore()
- segmenter le code pour séparer les classes de données (AVANT DE DIFFUSER REELLEMENT LE LOGICIEL)
- anonymer la documentation en faisant un import SIECLE avec des noms bidons et de nouvelles captures d'écrans.
- Créer un système évitant des incohérences entre les smartphones et la base locale : 
un numéro de course unique qui empêcherait toute communication tant que les données n'ont pas été coordonnées ou celles du smartphone effacées.
A réfléchir...
